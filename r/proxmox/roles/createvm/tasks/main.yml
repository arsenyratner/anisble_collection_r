- name: Full clone
  # async: 0
  community.general.proxmox_kvm:
    timeout: 90
    full: true
    state: present
    agent: true
    api_user: "{{ createvm_api_user }}"
    api_password: "{{ createvm_api_password }}"
    api_token_id: "{{ createvm_api_password }}"
    api_token_secret: "{{ createvm_api_token_secret }}"
    api_host: "{{ createvm_api_host }}"
    node: "{{ createvm_node }}"
    name: "{{ createvm_name }}"
    clone: "{{ createvm_template }}"
    storage: "{{ createvm_storage }}"
    format: "{{ createvm_format }}"
  when: createvm_full is true
  register: result_newvm

- name: Linked clone 
  # async: 0
  community.general.proxmox_kvm:
    timeout: 90
    full: false
    agent: true
    state: present
    api_user: "{{ createvm_api_user }}"
    api_password: "{{ createvm_api_password }}"
    api_token_id: "{{ createvm_api_password }}"
    api_token_secret: "{{ createvm_api_token_secret }}"
    api_host: "{{ createvm_api_host }}"
    node: "{{ createvm_node }}"
    name: "{{ createvm_name }}"
    clone: "{{ createvm_template }}"
  when: createvm_full is false
  register: result_newvm

- name: Get vm_info
  community.general.proxmox_vm_info:
    api_user: "{{ createvm_api_user }}"
    api_password: "{{ createvm_api_password }}"
    api_token_id: "{{ createvm_api_password }}"
    api_token_secret: "{{ createvm_api_token_secret }}"
    api_host: "{{ createvm_api_host }}"
    node: "{{ createvm_node }}"
    vmid: "{{ result_newvm.vmid }}"
    config: current
  register: vm_info
  retries: 3
  delay: 3
  until: vm_info.failed is false

- name: Resize disk
  community.general.proxmox_disk:
    state: resized
    api_user: "{{ createvm_api_user }}"
    api_password: "{{ createvm_api_password }}"
    api_token_id: "{{ createvm_api_password }}"
    api_token_secret: "{{ createvm_api_token_secret }}"
    api_host: "{{ createvm_api_host }}"
    vmid: "{{ result_newvm.vmid }}"
    disk: "{{ createvm_disk }}"
    size: "{{ createvm_size }}G"
  when: 
    - createvm_size is defined
    - createvm_size >= ((vm_info.proxmox_vms[0].maxdisk / (1024 * 1024 * 1024)) | int)

- name: Set nic mac 
  community.general.proxmox_nic:
    api_user: "{{ createvm_api_user }}"
    api_password: "{{ createvm_api_password }}"
    api_token_id: "{{ createvm_api_password }}"
    api_token_secret: "{{ createvm_api_token_secret }}"
    api_host: "{{ createvm_api_host }}"
    vmid: "{{ result_newvm.vmid }}"
    interface: "{{ createvm_interface }}"
    bridge: "{{ createvm_bridge }}"
    model: "{{ createvm_model }}"
    mtu: "{{ createvm_mtu }}"
    mac: "{{ createvm_mac }}"
  when: 
    - createvm_mac is defined
    - createvm_mac != ""

- name: Set nic
  community.general.proxmox_nic:
    api_user: "{{ createvm_api_user }}"
    api_password: "{{ createvm_api_password }}"
    api_token_id: "{{ createvm_api_password }}"
    api_token_secret: "{{ createvm_api_token_secret }}"
    api_host: "{{ createvm_api_host }}"
    vmid: "{{ result_newvm.vmid }}"
    interface: "{{ createvm_interface }}"
    bridge: "{{ createvm_bridge }}"
    model: "{{ createvm_model }}"
    mtu: "{{ createvm_mtu }}"
  when: 
    - createvm_mac is undefined or createvm_mac == omit or createvm_mac == ""

- name: Set CPU, memory
  community.general.proxmox_kvm:
    update: true
    api_user: "{{ createvm_api_user }}"
    api_password: "{{ createvm_api_password }}"
    api_token_id: "{{ createvm_api_password }}"
    api_token_secret: "{{ createvm_api_token_secret }}"
    api_host: "{{ createvm_api_host }}"
    node: "{{ createvm_node }}"
    vmid: "{{ result_newvm.vmid }}"
    cpu: "{{ createvm_cpu | default('host') }}" # cputype=host,flags=
    cores: "{{ createvm_cores }}"
    sockets: "{{ createvm_sockets }}"
    memory: "{{ createvm_memory }}"
    balloon: "{{ createvm_balloon }}"
  register: result
# - debug: "var=result"

- name: Set cloud-init
  community.general.proxmox_kvm:
    update: true
    api_user: "{{ createvm_api_user }}"
    api_password: "{{ createvm_api_password }}"
    api_token_id: "{{ createvm_api_password }}"
    api_token_secret: "{{ createvm_api_token_secret }}"
    api_host: "{{ createvm_api_host }}"
    vmid: "{{ result_newvm.vmid }}"
    node: "{{ createvm_node }}"
    citype: "{{ createvm_citype }}"
    ciuser: "{{ createvm_ciuser }}"
    cipassword: "{{ createvm_cipassword }}"
    sshkeys: "{{ createvm_sshkeys }}"
    ipconfig: 
      ipconfig0: '{{ createvm_ipconfig0 }}'
    nameservers: "{{ createvm_nameservers }}"
    searchdomains: "{{ createvm_searchdomains }}"
  register: result
# - debug: "var=result"
# - pause: 

- name: Set tags 
  community.general.proxmox_kvm:
    update: true
    api_user: "{{ createvm_api_user }}"
    api_password: "{{ createvm_api_password }}"
    api_token_id: "{{ createvm_api_password }}"
    api_token_secret: "{{ createvm_api_token_secret }}"
    api_host: "{{ createvm_api_host }}"
    node: "{{ createvm_node }}"
    vmid: "{{ result_newvm.vmid }}"
    tags: "{{ createvm_tags }}"
  when: createvm_tags != []

- name: Start VM 
  community.general.proxmox_kvm:
    state: started
    api_user: "{{ createvm_api_user }}"
    api_password: "{{ createvm_api_password }}"
    api_token_id: "{{ createvm_api_password }}"
    api_token_secret: "{{ createvm_api_token_secret }}"
    api_host: "{{ createvm_api_host }}"
    node: "{{ createvm_node }}"
    vmid: "{{ result_newvm.vmid }}"
  when: createvm_start is true
  ignore_errors: true
